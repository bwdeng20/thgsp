name: Testing


on: [ push, pull_request ]

jobs:

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 10 # max for free user
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04 ]
        python-version: [ 3.8 ]
        torch-version: [ 1.10.0 ]
        cuda-version: [ 'cpu','cu113' ]
        exclude:
          - torch-version: 1.9.0
            cuda-version: 'cu113'
          - torch-version: 1.10.1
            cuda-version: 'cu111'

    steps:
      - uses: actions/checkout@v2

      - name: Proxy info
        run: |
          python -c "import os; print(os.environ.get('http_proxy'),os.environ.get('https_proxy')) "

      - name: Set up Python ${{ matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set Pip Mirror in Mainland
        run: |
          pip install pip -U
          pip install wheel
          pip config set global.index-url https://pypi.doubanio.com/simple

      - name: Free up disk space
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo rm -rf /usr/share/dotnet

      - name: Install suitsparse
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libsuitesparse-dev

      - name: Install CUDA ${{ matrix.cuda-version }}
        if: ${{ matrix.cuda-version != 'cpu' }}
        run: |
          bash .github/workflows/cuda/${{ matrix.cuda-version }}-${{ runner.os }}.sh

      - name: Install PyTorch ${{ matrix.torch-version }}+${{ matrix.cuda-version }}
        run: |
          pip install torch==${{ matrix.torch-version}} -f https://download.pytorch.org/whl/${{ matrix.cuda-version }}/torch_stable.html

          python -c "import torch; print('PyTorch:', torch.__version__)"
          python -c "import torch; print('CUDA:', torch.version.cuda)"

      - name: Install torch-scatter, sparse, and cluster
        run: |
          pip install torch-scatter -f https://data.pyg.org/whl/torch-${{ matrix.torch-version }}+${{ matrix.cuda-version }}.html
          pip install torch-sparse -f https://data.pyg.org/whl/torch-${{ matrix.torch-version }}+${{ matrix.cuda-version }}.html
          pip install torch-cluster -f https://data.pyg.org/whl/torch-${{ matrix.torch-version }}+${{ matrix.cuda-version }}.html

      - name: Test Dependencies
        run: |
          python -c "import torch; print(torch.__version__)"
          pip install pytest
          pip install pytest-cov

      - name: Install main package for CPU
        if: ${{ matrix.cuda-version == 'cpu' }}
        run: |
          FORCE_ONLY_CPU=1 pip install -e .
        shell:
          bash

      - name: Install main package for GPU
        if: ${{ matrix.cuda-version != 'cpu' }}
        run: |
          source .github/workflows/cuda/${{ matrix.cuda-version }}-${{ runner.os }}-env.sh
          pip install -e .
        shell:
          bash

      - name: Test
        run: |
          pip install -e .
          pytest --cov=./thgsp/


