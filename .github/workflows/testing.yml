name: Testing


on:
  push:
    branches: [ main ]
  pull_request:


jobs:

  test:
    runs-on: ${{ matrix.os }}
    env:
      THGSP_PLT: 0 # disable matplotlib plot

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: ['3.11']
        torch-version: [2.5.0]  # [2.3.0, 2.4.0, 2.5.0]
        cuda-version: ['cpu']
        exclude:
          - torch-version: 2.5.0
            python-version: '3.8'
          - torch-version: 2.3.0
            cuda-version: 'cu124'


    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Translate cuXXY to XX.Y.Z, e.g., cu113 to 11.3.1
        if: ${{ matrix.cuda-version != 'cpu' }}
        id: translator
        run: |
          echo "::set-output name=full_version:: $(jq -r .${{ matrix.cuda-version }} .github/workflows/mapping.json)"

      - name: Install CUDA ${{ matrix.cuda-version }}
        if: ${{ matrix.cuda-version != 'cpu' }}
        uses: Jimver/cuda-toolkit@v0.2.5
        id: cuda-toolkit
        with:
          cuda: ${{steps.translator.outputs.full_version}}

      - name: Install PyTorch ${{ matrix.torch-version }}+${{ matrix.cuda-version }}
        run: |
          pip install torch==${{ matrix.torch-version }} --extra-index-url https://download.pytorch.org/whl/${{ matrix.cuda-version }}
          python -c "import torch; print('PyTorch:', torch.__version__)"
          python -c "import torch; print('CUDA:', torch.version.cuda)"

      - name: Install torch-scatter, sparse, and cluster
        run: |
          pip install torch-scatter torch-sparse torch-cluster -f https://data.pyg.org/whl/torch-${{ matrix.torch-version }}+${{ matrix.cuda-version }}.html

      - name: Install main package for CPU
        if: ${{ matrix.cuda-version == 'cpu' }}
        run: |
          FORCE_ONLY_CPU=1 pip install -e .
        shell:
          bash

      - name: Install main package for GPU
        if: ${{ matrix.cuda-version != 'cpu' }}
        run: |
          source .github/workflows/cuda/${{ matrix.cuda-version }}-${{ runner.os }}-env.sh
          pip install -e .
        shell:
          bash

      - name: Test Dependencies
        run: |
          python -c "import torch; print(torch.__version__)"
          pip install pytest
          pip install pytest-cov

      - name: Test
        run: |
          pytest --cov=./thgsp/

      - name: Codecov via Bash
        if: success()
        run: bash <(curl -s https://codecov.io/bash)
        shell:
          bash

